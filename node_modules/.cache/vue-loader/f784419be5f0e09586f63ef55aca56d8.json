{"remainingRequest":"C:\\Users\\Megha\\Documents\\Task submission\\vueProject\\todo\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Megha\\Documents\\Task submission\\vueProject\\todo\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Megha\\Documents\\Task submission\\vueProject\\todo\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Megha\\Documents\\Task submission\\vueProject\\todo\\src\\App.vue?vue&type=template&id=7ba5bd90&","dependencies":[{"path":"C:\\Users\\Megha\\Documents\\Task submission\\vueProject\\todo\\src\\App.vue","mtime":1560542194931},{"path":"C:\\Users\\Megha\\Documents\\Task submission\\vueProject\\todo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Megha\\Documents\\Task submission\\vueProject\\todo\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Megha\\Documents\\Task submission\\vueProject\\todo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Megha\\Documents\\Task submission\\vueProject\\todo\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"container\", attrs: { id: \"app\" } },\n    [\n      _c(\"h2\", [_vm._v(\" Todo List\")]),\n      _c(\n        \"md-card\",\n        [\n          _c(\n            \"md-header\",\n            [\n              _c(\n                \"md-field\",\n                [\n                  _c(\"md-input\", {\n                    staticClass: \"todo-input\",\n                    attrs: { type: \"text\", placeholder: \"Add a todo\" },\n                    on: {\n                      keydown: function($event) {\n                        if (\n                          !$event.type.indexOf(\"key\") &&\n                          _vm._k(\n                            $event.keyCode,\n                            \"enter\",\n                            13,\n                            $event.key,\n                            \"Enter\"\n                          )\n                        ) {\n                          return null\n                        }\n                        return _vm.addTodo()\n                      }\n                    },\n                    model: {\n                      value: _vm.currentTodo,\n                      callback: function($$v) {\n                        _vm.currentTodo = $$v\n                      },\n                      expression: \"currentTodo\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _c(\n                \"ul\",\n                _vm._l(_vm.todos, function(todo) {\n                  return _c(\"li\", { key: todo.id }, [\n                    _c(\"div\", { staticClass: \"todo-item-left\" }, [\n                      !todo.editing\n                        ? _c(\n                            \"div\",\n                            {\n                              staticClass: \"todo-item-label\",\n                              class: { completed: todo.completed },\n                              on: {\n                                dblclick: function($event) {\n                                  return _vm.editTodo(todo)\n                                }\n                              }\n                            },\n                            [\n                              _vm._v(\n                                \"\\n            \" +\n                                  _vm._s(todo.label) +\n                                  \"\\n          \"\n                              )\n                            ]\n                          )\n                        : _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: todo.label,\n                                expression: \"todo.label\"\n                              },\n                              { name: \"focus\", rawName: \"v-focus\" }\n                            ],\n                            staticClass: \"todo-item-edit\",\n                            attrs: { type: \"text\" },\n                            domProps: { value: todo.label },\n                            on: {\n                              blur: function($event) {\n                                return _vm.doneEdit(todo)\n                              },\n                              keyup: [\n                                function($event) {\n                                  if (\n                                    !$event.type.indexOf(\"key\") &&\n                                    _vm._k(\n                                      $event.keyCode,\n                                      \"enter\",\n                                      13,\n                                      $event.key,\n                                      \"Enter\"\n                                    )\n                                  ) {\n                                    return null\n                                  }\n                                  return _vm.doneEdit(todo)\n                                },\n                                function($event) {\n                                  if (\n                                    !$event.type.indexOf(\"key\") &&\n                                    _vm._k(\n                                      $event.keyCode,\n                                      \"esc\",\n                                      27,\n                                      $event.key,\n                                      [\"Esc\", \"Escape\"]\n                                    )\n                                  ) {\n                                    return null\n                                  }\n                                  return _vm.cancelEdit(todo)\n                                }\n                              ],\n                              input: function($event) {\n                                if ($event.target.composing) {\n                                  return\n                                }\n                                _vm.$set(todo, \"label\", $event.target.value)\n                              }\n                            }\n                          })\n                    ]),\n                    _c(\n                      \"div\",\n                      {\n                        staticClass: \"close\",\n                        on: {\n                          click: function($event) {\n                            return _vm.removeTodo(todo)\n                          }\n                        }\n                      },\n                      [_vm._v(\"Ã—\")]\n                    )\n                  ])\n                }),\n                0\n              )\n            ],\n            1\n          ),\n          _c(\"md-container\", [\n            _c(\"div\", { staticClass: \"extra-container\" }, [\n              _c(\"div\", [\n                _c(\"label\", [\n                  _c(\"input\", {\n                    attrs: { type: \"checkbox\" },\n                    domProps: { checked: !_vm.anyRemaining },\n                    on: { change: _vm.checkAllTodos }\n                  }),\n                  _vm._v(\"Check All\")\n                ])\n              ]),\n              _c(\"div\", [_vm._v(_vm._s(_vm.remaining) + \" items left \")])\n            ]),\n            _c(\"div\", [_c(\"small\", [_vm._v(\"Double click to edit a Todo\")])])\n          ])\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}